#!/usr/bin/env python3.11
from typing import Optional, Union


def some_func(arg: Union[int, None] = None): ...


def some_func2(arg: Optional[int] = None): ...

# В Python Optional[...] является типом шорткатом Union[..., None], поэтому технические нет разницы в их использовании

# Обратите внимание, что это не то же самое, что и необязательный аргумент. который имеет значение по умолчанию.
# Необязательный аргумент с по умолчанию не требует Optionalквалификатор по типу аннотацию только потому, что она
# необязательна. Например:
#
# def foo(arg: int = 0) -> None:
#    ...
#
# С другой стороны, если явное значение Noneразрешено, т. использование Optionalподходит, является ли аргумент
# необязательным или нет. Например:
# def foo(arg: Optional[int] = None) -> None:
#     ...

# Изменено в версии 3.10: Можно записывать вместо Optional[int] - int | None.
